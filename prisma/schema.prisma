generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id          String   @id @db.Uuid
  fullName    String
  phoneNumber String
  status      Int      @default(1)
  ticket      ticket[]

  createdAt       DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime? @default(now()) @db.Timestamptz(6)
}

model cinema {
  id            String @id @db.Uuid
  name          String
  numberOfSeats Int
  status        Int    @default(1)
  show          show[]

  createdAt       DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime? @default(now()) @db.Timestamptz(6)
  @@index([id], map: "idx_cinema_cinemaid")
}

model show {
  id             String @id @db.Uuid
  name           String
  pricePerTicket Int
  startTime      String?
  endTime        String?
  status         Int    @default(1)
  cinemaId       String @db.Uuid


  createdAt       DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime? @default(now()) @db.Timestamptz(6)
  cinema    cinema?     @relation(fields: [cinemaId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "show_cinema_cinemaid_foreign")
  ticket    ticket[]
  show_seat show_seat[]

  @@index([id], map: "idx_show_showid")
}

model show_seat {
  id     String @id @db.Uuid
  seatId String
  status Int    @default(0)
  showId String @db.Uuid


  createdAt       DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime? @default(now()) @db.Timestamptz(6)
  show show? @relation(fields: [showId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ticket_show_showid_foreign")
}

model ticket {
  id              String  @id @db.Uuid
  amount          String
  numberOfTickets Int
  status          Int     @default(1)
  show            show?   @relation(fields: [showId], references: [id])
  showId          String? @db.Uuid
  userId          String  @db.Uuid
  user            user?   @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "ticket_user_userid_foreign")


  createdAt       DateTime? @default(now()) @db.Timestamptz(6)
  updatedAt       DateTime? @default(now()) @db.Timestamptz(6)
  @@index([id], map: "idx_ticket_ticketid")
}
